/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgnew;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static pkgnew.Main_Frame.rs_bid;
import static pkgnew.Main_Frame.rs_bidlist;
import static pkgnew.Main_Frame.user_login;
import static pkgnew.Main_Frame.User_bid;
import static pkgnew.Main_Frame.ip;

/**
 *
 * @author avishkar
 */
public class Bids extends javax.swing.JPanel {

    /**
     * Creates new form Bids
     */
    public Bids() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_Bid_price = new javax.swing.JLabel();
        tf_Date = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tf_owner = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tf_Category = new javax.swing.JLabel();
        tf_Sub_Category = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_Base_price = new javax.swing.JLabel();
        bt_cancelbid = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_bid = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        item_pic = new javax.swing.JLabel();

        jPanel1.setBorder(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 18), new java.awt.Color(14, 0, 128))); // NOI18N

        jLabel2.setText("Category:-");

        jLabel4.setText("Base Price:-");

        jLabel5.setText("Bid Price:-");

        jLabel7.setText("Owner:-");

        jLabel6.setText("Date of Bidding:-");

        jLabel3.setText("Sub-Category:-");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addGap(113, 113, 113)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_owner)
                    .addComponent(tf_Base_price)
                    .addComponent(tf_Sub_Category)
                    .addComponent(tf_Category)
                    .addComponent(tf_Bid_price)
                    .addComponent(tf_Date))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_Category))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_Sub_Category))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tf_Base_price))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_Bid_price)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(tf_Date))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(tf_owner))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bt_cancelbid.setText("cancel Bid");
        bt_cancelbid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelbidActionPerformed(evt);
            }
        });

        list_bid.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        list_bid.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "item name/base price/bid price", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        list_bid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_bidMouseClicked(evt);
            }
        });
        list_bid.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                list_bidAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(list_bid);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setText("Bids");

        item_pic.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(bt_cancelbid)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(item_pic, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                        .addGap(64, 64, 64))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(317, 317, 317))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(item_pic, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(57, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_cancelbid)
                        .addGap(145, 145, 145))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void list_bidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_bidMouseClicked
        // TODO add your handling code here:
        
        Thread t = new Thread(){
        
            public void run(){
            
                try {
                    String name = list_bid.getSelectedValue().toString();
                    
                    rs_bid.beforeFirst();
                    int item_id=0;
                    
                    while(rs_bid.next()){
                        
                        String str = rs_bid.getString("item_name");
                        if(str.equals(name)){
                        
                           tf_Category.setText(rs_bid.getString("category"));
                           tf_Sub_Category.setText(rs_bid.getString("sub_category"));
                           tf_Base_price.setText(rs_bid.getString("base_price"));
                           //tf_Bid_price.setText(rs_bid.getString("base_price"));
                           tf_Date.setText(rs_bid.getString("date"));
                           tf_owner.setText(rs_bid.getString("User_name"));
                           item_id = rs_bid.getInt("item_id");
                            System.out.println("near icon");
                           byte[] pic =rs_bid.getBytes("image");
                          ImageIcon img = new ImageIcon(pic);
                        item_pic.setIcon(img);
                        
                        }
                        
                    }
                    
                    
                    rs_bidlist.beforeFirst();
                    while(rs_bidlist.next()){
                    
                        int id=rs_bidlist.getInt("item_id");
                        String price = rs_bidlist.getString("bid_price");
                        if(item_id==id){
                        
                            tf_Bid_price.setText(price);
                        }
                    }
                    
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Bids.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        
        };
        t.start();
    }//GEN-LAST:event_list_bidMouseClicked

    private void bt_cancelbidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelbidActionPerformed
        // TODO add your handling code here:
        
        Thread t = new Thread(){
        
            public void run(){
                
                try {
                    Socket soc = new Socket(ip,12345);
                    
                    PrintWriter pr = new PrintWriter (soc.getOutputStream(),true);
                    pr.println("CANCEL_BID");
                    
                    String item_name = list_bid.getSelectedValue().toString();
                    
                    int item_id=0;
                    rs_bid.beforeFirst();
                    while(rs_bid.next()){
                        
                        String str = rs_bid.getString("item_name");
                        if(str.equals(item_name)){
                        
                           item_id = rs_bid.getInt("item_id");
                           
                        }  
                    }
                    String ss="";
                    ss+=item_id;
                    
                    System.out.println("sending details to server");
                    
                    BufferedReader buff = new BufferedReader(new InputStreamReader(soc.getInputStream()));
                    
                    String str = buff.readLine();
                    System.out.println(str);
                    
                    PrintWriter pr1 = new PrintWriter (soc.getOutputStream(),true);
                    
                    pr1.println(user_login);
                    System.out.println(user_login);
                    
                    System.out.println("sent first detail");
                    pr1.println(ss);
                    System.out.println(ss);
                    
                    
                    System.out.println("sent second detail");
                    
                    User_bid();
                    
                    tf_Base_price.setText("");
                    tf_Bid_price.setText("");
                    tf_Category.setText("");
                    tf_Date.setText("");
                    tf_Sub_Category.setText("");
                    tf_owner.setText("");
                    item_pic.setIcon(null);
                    JOptionPane.showMessageDialog(null,"Bid Cancelled");
                } catch (IOException ex) {
                    Logger.getLogger(Bids.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Bids.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            
            }
        
        };
        t.start();
        
    }//GEN-LAST:event_bt_cancelbidActionPerformed

    private void list_bidAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_list_bidAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_list_bidAncestorMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_cancelbid;
    private javax.swing.JLabel item_pic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JList list_bid;
    private javax.swing.JLabel tf_Base_price;
    private javax.swing.JLabel tf_Bid_price;
    private javax.swing.JLabel tf_Category;
    private javax.swing.JLabel tf_Date;
    private javax.swing.JLabel tf_Sub_Category;
    private javax.swing.JLabel tf_owner;
    // End of variables declaration//GEN-END:variables
}
