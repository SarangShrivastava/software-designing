


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgnew;

import com.sun.rowset.CachedRowSetImpl;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.coobird.thumbnailator.Thumbnails;
import net.proteanit.sql.DbUtils;
import static pkgnew.List_Items.table_listitems;
import static pkgnew.Main_Frame.User_upload;
import static pkgnew.Main_Frame.rs_sold_buyer;
import static pkgnew.Main_Frame.user_login;
import static pkgnew.Upload.cb_Category;

import static pkgnew.Main_Frame.rs_tobesold_bids;
import static pkgnew.Main_Frame.rs_solditems;
import static pkgnew.Main_Frame.rs_tobesold;
import static pkgnew.Profile.person_image;
import static pkgnew.Profile.profile_pic;
import static pkgnew.Main_Frame.card;
import static pkgnew.Main_Frame.ip;
/**
 *
 * @author avishkar
 */
public class Upload extends javax.swing.JPanel {

    /**
     * Creates new form Upload
     */
    public Upload() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cb_Category = new javax.swing.JComboBox();
        cb_Sub_category = new javax.swing.JComboBox();
        tf_Item_name = new javax.swing.JTextField();
        tf_base_price = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tf_Details = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        bt_submit = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tf_meeting = new javax.swing.JTextArea();
        newitem_pic = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        date = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        item_pic = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tobesold_itemlist = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        bt_save_itemchanges = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        label_category = new javax.swing.JLabel();
        label_subcategory = new javax.swing.JLabel();
        label_uploaddate = new javax.swing.JLabel();
        label_timelimit = new javax.swing.JLabel();
        tf_baseprice = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tf_info = new javax.swing.JTextArea();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jPanel8 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        table_bid = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        list_solditem = new javax.swing.JList();
        jPanel10 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        tf_name = new javax.swing.JLabel();
        tf_address = new javax.swing.JLabel();
        tf_email = new javax.swing.JLabel();
        tf_contactno = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        label_username = new javax.swing.JLabel();

        jPanel1.setPreferredSize(new java.awt.Dimension(850, 600));
        jPanel1.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 128));
        jLabel1.setText("UPLOADS");

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jLabel3.setText("Category:-");

        jLabel18.setText("Item Name:-");

        jLabel19.setText("Time Limit:-");

        jLabel20.setText("Sub- Category:-");

        jLabel23.setText("Details:-");

        jLabel26.setText("Base Price:-");

        cb_Category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Home Appliances", "Electronics Appliances", "Sports", "Cycles", "Books", "Others" }));
        cb_Category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cb_CategoryMouseClicked(evt);
            }
        });
        cb_Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_CategoryActionPerformed(evt);
            }
        });

        cb_Sub_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_Sub_categoryActionPerformed(evt);
            }
        });

        tf_Item_name.setText("jTextField2");
        tf_Item_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_Item_nameActionPerformed(evt);
            }
        });

        tf_base_price.setText("jTextField3");

        tf_Details.setColumns(20);
        tf_Details.setRows(5);
        jScrollPane5.setViewportView(tf_Details);

        jLabel17.setText("Meeting Place:-");

        bt_submit.setText("Submit");
        bt_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_submitActionPerformed(evt);
            }
        });

        tf_meeting.setColumns(20);
        tf_meeting.setRows(5);
        jScrollPane6.setViewportView(tf_meeting);

        newitem_pic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkgnew/imageNotFound.jpg"))); // NOI18N

        jButton3.setText("Change pic");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        date.setDateFormatString(" yyyy/MM/dd");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel20)
                        .addComponent(jLabel23)
                        .addComponent(jLabel17)
                        .addComponent(jLabel19)
                        .addComponent(jLabel18))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(29, 29, 29)))
                .addGap(126, 126, 126)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_Sub_category, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_Item_name, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_base_price, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(jButton3)
                                .addGap(0, 67, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(newitem_pic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(bt_submit)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(newitem_pic, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(tf_base_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cb_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_Sub_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_Item_name)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(bt_submit)))
                .addGap(34, 34, 34))
        );

        jTabbedPane1.addTab("Add New Sale", jPanel6);

        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        item_pic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tobesold_itemlist.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tobesold_itemlist.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        tobesold_itemlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tobesold_itemlistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tobesold_itemlist);

        jButton2.setText("Delete Item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        bt_save_itemchanges.setText("Save Changes");
        bt_save_itemchanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_save_itemchangesActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 18), new java.awt.Color(0, 0, 128)))); // NOI18N

        jPanel5.setBorder(null);

        jLabel5.setText("Base Price :-");

        jLabel6.setText("Category :-");

        jLabel7.setText("Time Limit :-");

        jLabel8.setText("Upload Date:-");

        jLabel9.setText("Sub Category :-");

        jLabel10.setText("jLabel4");

        jLabel16.setText("Info :-");

        tf_info.setColumns(20);
        tf_info.setRows(5);
        jScrollPane2.setViewportView(tf_info);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 84, Short.MAX_VALUE)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel7))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tf_baseprice, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(85, 85, 85)
                                        .addComponent(label_timelimit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(74, 74, 74)
                                .addComponent(label_uploaddate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(29, 29, 29))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_category, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_subcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(41, 41, 41))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(jLabel10)
                    .addContainerGap(259, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(label_category, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(label_subcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel8))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(label_uploaddate, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_timelimit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(tf_baseprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(29, 29, 29)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(178, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 32, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bids", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 18), new java.awt.Color(0, 0, 128))); // NOI18N

        jButton4.setText("Sell Item");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        table_bid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(table_bid);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jButton4))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(bt_save_itemchanges)
                        .addGap(14, 14, 14))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addComponent(item_pic, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(69, 69, 69))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(item_pic, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(bt_save_itemchanges)))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("To be sold", jPanel3);

        list_solditem.setFont(new java.awt.Font("SansSerif", 2, 18)); // NOI18N
        list_solditem.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        list_solditem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_solditemMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(list_solditem);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 18), new java.awt.Color(0, 0, 128))); // NOI18N

        jPanel4.setBorder(null);

        jLabel22.setText("Name:-");

        jLabel24.setText("Address:-");

        jLabel25.setText("Email:-");

        jLabel27.setText("Contact No:-");

        tf_name.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        tf_address.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        tf_email.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel22)
                    .addComponent(jLabel25)
                    .addComponent(jLabel27))
                .addGap(80, 80, 80)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_address, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_email)
                    .addComponent(tf_contactno, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(tf_address))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_email))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(tf_contactno, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel2.setText("Username");

        label_username.setText("jLabel4");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)
                        .addGap(112, 112, 112)
                        .addComponent(label_username)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(label_username))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("sold items", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public static String category;
    public static String sub_category;
    public static String time_limit;
    public static String base_price;
    public static String item_name;
    public static String details;
    public static String meeting_place;
    public static String str;
    public static String bid_price;
    public static String info;
    public static int item_id;
    public static int sold_item_id;
    
    private void list_solditemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_solditemMouseClicked
        // TODO add your handling code here:
        Thread t;
        t = new Thread(){
            public void run(){
              
                      
                try {
                    System.out.println("trying to create a new connection");
                    
                    Socket soc = new Socket(ip,12345);
                    
                    
                    PrintWriter pr = new PrintWriter(soc.getOutputStream(),true);
                pr.println("SOLDITEM_BUYER");
                    
                    System.out.println("written dsiplay to socket");
                     
                    BufferedReader rd = new BufferedReader(new InputStreamReader(soc.getInputStream()));
                    
                    
                  String  str = list_solditem.getSelectedValue().toString();
            System.out.println(str);
            rs_solditems.beforeFirst();
            while(rs_solditems.next())
            {
                if(rs_solditems.getString("item_name").equals(str))
                {
                        System.out.println("inside while");
                        sold_item_id = rs_solditems.getInt("item_id");
                   
                    
                }
                
            }
                    str = rd.readLine();
                    
                    if(str.equals("OK"))
                    {
                        pr.println(sold_item_id);
                        System.out.println(sold_item_id);
                    }
                    
                    ObjectInputStream ob = new ObjectInputStream(soc.getInputStream());
                    rs_sold_buyer =  (CachedRowSetImpl)ob.readObject();
                    
                    System.out.println("got the crs");
                    while(rs_sold_buyer.next())
                    {
                    String user_name = rs_sold_buyer.getString("User_Name");
                    System.out.println(user_name);
                    tf_name.setText("user_name");
                    tf_address.setText(rs_sold_buyer.getString("Address"));
                    tf_email.setText(rs_sold_buyer.getString("Email"));
                    tf_contactno.setText(rs_sold_buyer.getString("ContactNo"));
                    label_username.setText(rs_sold_buyer.getString("User_Name"));
                    }
                    System.out.println("done");
                } catch (IOException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        };t.start();
    }//GEN-LAST:event_list_solditemMouseClicked

    private void cb_CategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cb_CategoryMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_cb_CategoryMouseClicked

    private void cb_CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_CategoryActionPerformed
        // TODO add your handling code here:
        /* System.out.println(" AA");
        int i=0;
        String str =  (String)cb_Category.getSelectedItem();
        if(str.equals("Home Appliances"))
        {
            while(home[i]!=null)
            {
                cb_Sub_category.addItem(home[i]);
                i++;
            }
        }
        else if(str.equals("Books"))
        {
            i=0;
            while(Books[i]!=null)
            {
                cb_Sub_category.addItem(Books[i]);
                i++;
            }}
            else if(str.equals("Sports"))
            {
                i=0;
                while(sports[i]!=null)
                {
                    cb_Sub_category.addItem(sports[i]);
                    i++;
                }}
                else if(str.equals("Electronics Appliances"))
                {
                    i=0;
                    while(Electronics[i]!=null)
                    {
                        cb_Sub_category.addItem(Electronics[i]);
                        i++;
                    }}
                    else
                    cb_Sub_category.setVisible(false);
                    */
                    if ("Home Appliances".equals(cb_Category.getSelectedItem())){
                        cb_Sub_category.setModel(d_home);
                        cb_Sub_category.setVisible(true);
                    }
                    else if ("Books".equals(cb_Category.getSelectedItem())){
                        cb_Sub_category.setModel(d_books);
                        cb_Sub_category.setVisible(true);
                    }
                    else if ("Sports".equals(cb_Category.getSelectedItem())){
                        cb_Sub_category.setModel(d_sports);
                        cb_Sub_category.setVisible(true);
                    }
                    else if ("Electronics Appliances".equals(cb_Category.getSelectedItem())){
                        cb_Sub_category.setModel(d_electronics);
                        cb_Sub_category.setVisible(true);
                    }
                    else {cb_Sub_category.setVisible(false);}
    }//GEN-LAST:event_cb_CategoryActionPerformed

    private void cb_Sub_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_Sub_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_Sub_categoryActionPerformed

    private void tf_Item_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_Item_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_Item_nameActionPerformed

    private void bt_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_submitActionPerformed
        // TODO add your handling code here:

        Thread t;
        t = new Thread()
        {
            @Override
            public void run()
            {
                try {
                    category = cb_Category.getSelectedItem().toString();
                    String sub = null;
                    if(!(category.equals("Cycles") || category.equals("Others")))
                    {
                      sub = cb_Sub_category.getSelectedItem().toString();
                    }
                
                    time_limit  = ((JTextField)date.getDateEditor().getUiComponent()).getText();
                    
  
                    System.out.println(time_limit);
                    item_name = tf_Item_name.getText();
                    details = tf_Details.getText();
                    meeting_place = tf_meeting.getText();
                    base_price = tf_base_price.getText();
                    
                    boolean flag=false;
                    int l = base_price.length();
                    for(int i=0;i<l;i++){
                        
                        if(base_price.charAt(i)=='0'||base_price.charAt(i)=='1'||base_price.charAt(i)=='2'||base_price.charAt(i)=='3'||base_price.charAt(i)=='4'||base_price.charAt(i)=='5'||base_price.charAt(i)=='6'||base_price.charAt(i)=='7'||base_price.charAt(i)=='8'||base_price.charAt(i)=='9'){
                        
                        
                        
                     }
                        else{
                            flag=true;
                            break;
                        }
                    
                    }
                    
                    if(flag==true){
                    
                        JOptionPane.showMessageDialog(null,"BASE PRICE SHOULD BE INTEGER");
                        tf_base_price.setText("");
                        return ;
                    }
                    
                    Socket soc = new Socket (ip,12345);
                    PrintWriter pr = new PrintWriter(soc.getOutputStream(),true);
                    pr.println("UPLOAD");

                    BufferedReader rd = new BufferedReader(new InputStreamReader(soc.getInputStream()));
                    String str = rd.readLine();
                    if(str.equals("OK"))
                    {
                        ObjectOutputStream ob = new ObjectOutputStream(soc.getOutputStream());
                        ob.writeObject(newitem_image);
                        pr.println(category);
                        pr.println(sub);
                        pr.println(item_name);
                        pr.println(time_limit);
                        pr.println(details);
                        pr.println(base_price);
                        pr.println(meeting_place);
                        pr.println(user_login);

                    }
                    JOptionPane.showMessageDialog(null, "Details Submitted Succssfully");
                    tf_Item_name.setText("");
                    tf_Details.setText("");
                    tf_meeting.setText("");
                    tf_base_price.setText("");
                    cb_Category.setSelectedIndex(0);
                    cb_Sub_category.setSelectedIndex(0);
                    
                    Main_Frame.image();
                    User_upload();
                } catch (IOException ex) {
                    Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        };
        t.start();

    }//GEN-LAST:event_bt_submitActionPerformed
    
    private void tobesold_itemlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tobesold_itemlistMouseClicked

        Thread t = new Thread(){
            public void run(){

                try {
                    // TODO add your handling code here:
                    System.out.println("in tobesold_mouseclick");
                    str = tobesold_itemlist.getSelectedValue().toString();
                    System.out.println(str);
                    rs_tobesold.beforeFirst();
                    while(rs_tobesold.next())
                    {
                        if(rs_tobesold.getString("item_name").equals(str))
                        {
                            System.out.println("inside while");
                            item_id = rs_tobesold.getInt("item_id");
                            System.out.println(item_id);
                            label_category.setText(rs_tobesold.getString("category"));
                            label_subcategory.setText(rs_tobesold.getString("sub_category"));
                            tf_baseprice.setText(rs_tobesold.getString("base_price"));
                            tf_info.setText(rs_tobesold.getString("details"));
                            label_timelimit.setText(rs_tobesold.getString("time_limit"));
                            label_uploaddate.setText(rs_tobesold.getString("date"));
                            
                            System.out.println("getting image of item");
                            item_image =rs_tobesold.getBytes("image");
                            ImageIcon img = new ImageIcon(item_image);
                            item_pic.setIcon(img);
                            System.out.println("image is set");
                        }

                    }
                    /*
                    System.out.println("trying to create a new connection");

                    Socket soc = new Socket(ip,12345);

                    PrintWriter pr = new PrintWriter(soc.getOutputStream(),true);
                    pr.println("UPLOAD_BID");

                    System.out.println("written dsiplay to socket");

                    BufferedReader rd = new BufferedReader(new InputStreamReader(soc.getInputStream()));

                    String str = rd.readLine();

                    if(str.equals("OK"))
                    {
                        pr.println(item_id);
                        System.out.println(item_id);
                    }
                    
                    ObjectInputStream ob = new ObjectInputStream(soc.getInputStream());
                    rs_tobesold_bids =  (CachedRowSetImpl)ob.readObject();
                    table_bid.setModel(DbUtils.resultSetToTableModel(rs_tobesold_bids));
                            */
                    upload_bid();

                } catch (SQLException ex) {
                    Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        };
        t.start();

    }//GEN-LAST:event_tobesold_itemlistMouseClicked

    public void upload_bid()
   {
        Thread t;
        t = new Thread(){
            public void run(){
                System.out.println("in func upload_bid");
                      
                try {
                    System.out.println("trying to create a new connection");
                    
                    Socket soc = new Socket(ip,12345);
                    
                    
                    PrintWriter pr = new PrintWriter(soc.getOutputStream(),true);
                    pr.println("UPLOAD_BID");
                    
                    System.out.println("written dsiplay to socket");
                     
                    BufferedReader rd = new BufferedReader(new InputStreamReader(soc.getInputStream()));
                    
                    String str = rd.readLine();
                    
                    if(str.equals("OK"))
                    {
                        pr.println(item_id);
                        System.out.println(item_id);
                    }
                    ObjectInputStream ob = new ObjectInputStream(soc.getInputStream());
                    rs_tobesold_bids =  (CachedRowSetImpl)ob.readObject();
                   table_bid.setModel(DbUtils.resultSetToTableModel(rs_tobesold_bids));
                   
                } catch (IOException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        };t.start();
   }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        
        Thread t = new Thread(){
                public void run(){
                
                    try {
            // TODO add your handling code here:
            
            
            int row  = table_bid.getSelectedRow();
            String sitem_id = (table_bid.getModel().getValueAt(row,1).toString());
            String item_buyer = (table_bid.getModel().getValueAt(row,0).toString());
            String bid_price = (table_bid.getModel().getValueAt(row,2).toString());
            
            
            Socket soc = new Socket (ip,12345);
            PrintWriter pr = new PrintWriter(soc.getOutputStream(),true);
            
            pr.println("SELLITEM");
            pr.println(sitem_id);
            pr.println(item_buyer);
            pr.println(bid_price);
            
            item_pic.setIcon(null);
            label_category.setText("");
            label_subcategory.setText("");
            label_timelimit.setText("");
            label_uploaddate.setText("");
            label_username.setText("");
            
            JOptionPane.showMessageDialog(null,"ITEM SOLD SUCCESSFULLY");
            User_upload();
            
        } catch (IOException ex) {
            Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
                    
                }
            
            };
            t.start();
        
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Thread t= new Thread()
        {
            public void run()
            {
                try {

                    Socket soc = new Socket (ip,12345);
                    PrintWriter pr = new PrintWriter(soc.getOutputStream(),true);
                    pr.println("DELETE_ITEM");

                    BufferedReader rd = new BufferedReader(new InputStreamReader(soc.getInputStream()));
                    String str = rd.readLine();
                    if(str.equals("OK"))
                    {
                        pr.println(item_id);
                    }

                    String s =rd.readLine();
                    System.out.println(s);
                    User_upload();
                   //item_pic.setText("");
                   label_category.setText("");
                   label_subcategory.setText("");
                   label_timelimit.setText("");
                   label_uploaddate.setText("");
                   item_pic.setIcon(null);
                   tf_baseprice.setText("");
                   tf_info.setText("");
                   JOptionPane.showMessageDialog(null,"Item Deleted" );
                } catch (IOException ex) {
                    Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        };
        t.start();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void bt_save_itemchangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_save_itemchangesActionPerformed
        // TODO add your handling code here:
        Thread t= new Thread()
        {
            public void run()
            {
                try {
                    bid_price = tf_baseprice.getText();
                    info = tf_info.getText();

                    Socket soc = new Socket (ip,12345);
                    PrintWriter pr = new PrintWriter(soc.getOutputStream(),true);
                    pr.println("SAVE_ITEM_CHANGES");

                    BufferedReader rd = new BufferedReader(new InputStreamReader(soc.getInputStream()));
                    String str = rd.readLine();
                    if(str.equals("OK"))
                    {
                        ObjectOutputStream ob = new ObjectOutputStream(soc.getOutputStream());
                        ob.writeObject(item_image);
                        pr.println(bid_price);
                        pr.println(info);
                        pr.println(item_id);
                    }
                    
                    JOptionPane.showMessageDialog(null,"Changes Saved" );
                    
                } catch (IOException ex) {
                    Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        };
        t.start();
    }//GEN-LAST:event_bt_save_itemchangesActionPerformed

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        System.out.println("in function");
        //User_upload();
        // System.out.println("after function");

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        FileInputStream fis = null;
        try {
            // TODO add your handling code here:
            
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String str = f.getAbsolutePath();
            File image = new File(str);
            fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[2048];
            for(int i;(i=fis.read(buf))!=-1;){
                
                bos.write(buf,0,i);
            }   
                               
            item_image= bos.toByteArray();
            
            ImageIcon format = new ImageIcon(item_image);
            item_pic.setIcon(format);
            
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        FileInputStream fis = null;
        try {
            // TODO add your handling code here:
            
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String str = f.getAbsolutePath();
            File image = new File(str);
            BufferedImage bi = ImageIO.read(image);
            BufferedImage new_bi= Thumbnails.of(bi).size(220, 160).asBufferedImage();
            
            
            fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            ImageIO.write(new_bi, "png", bos);  
                               
            newitem_image= bos.toByteArray();
            
            ImageIcon format = new ImageIcon(newitem_image);
            newitem_pic.setIcon(format);
            
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    
    
    String [] home = {"","kettle","induction","heater/heating_rod","press","emergency","others"};
    String [] Books = {"","Cse/It","Ece/Electrical","Mech/Prod","Civil","Biotech","Chemical"};
    String [] sports = {"","Gym_equipments","Badminton/TT/Tennis","Chess","Cricket","Volleyball/Football","Others"};
    String [] Electronics = {"","Mobile","laptop","Tablet","cooler","Camera","Others"};   
    
    final DefaultComboBoxModel d_home = new DefaultComboBoxModel(new String[]{"","kettle","induction","heater/heating_rod","press","emergency","others"});
    final DefaultComboBoxModel d_books = new DefaultComboBoxModel(new String[]{"","Cse/It","Ece/Electrical","Mech/Prod","Civil","Biotech","Chemical"});
    final DefaultComboBoxModel d_sports = new DefaultComboBoxModel(new String[]{"","Gym_equipments","Badminton/TT/Tennis","Chess","Cricket","Volleyball/Football","Others"});
    final DefaultComboBoxModel d_electronics = new DefaultComboBoxModel(new String[]{"","Mobile","laptop","Tablet","cooler","Camera","Others"});

    
    
    
    public static byte[] item_image = null;
     public static byte[] newitem_image = null;
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_save_itemchanges;
    private javax.swing.JButton bt_submit;
    public static javax.swing.JComboBox cb_Category;
    public static javax.swing.JComboBox cb_Sub_category;
    public static com.toedter.calendar.JDateChooser date;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel item_pic;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel label_category;
    private javax.swing.JLabel label_subcategory;
    private javax.swing.JLabel label_timelimit;
    private javax.swing.JLabel label_uploaddate;
    public static javax.swing.JLabel label_username;
    public static javax.swing.JList list_solditem;
    public static javax.swing.JLabel newitem_pic;
    public static javax.swing.JTable table_bid;
    private javax.swing.JTextArea tf_Details;
    private javax.swing.JTextField tf_Item_name;
    private javax.swing.JLabel tf_address;
    private javax.swing.JTextField tf_base_price;
    private javax.swing.JTextField tf_baseprice;
    private javax.swing.JLabel tf_contactno;
    private javax.swing.JLabel tf_email;
    private javax.swing.JTextArea tf_info;
    private javax.swing.JTextArea tf_meeting;
    private javax.swing.JLabel tf_name;
    public static javax.swing.JList tobesold_itemlist;
    // End of variables declaration//GEN-END:variables
    
    public static void User_solditem() {
        Thread t;
        t = new Thread(){
            public void run(){
                      
                try {
                    System.out.println("trying to create a new connection");
                    
                    Socket soc = new Socket(ip,12345);
                    
                    
                    PrintWriter pr = new PrintWriter(soc.getOutputStream(),true);
                pr.println("USER_SOLDITEM");
                    
                    System.out.println("written dsiplay to socket");
                     
                    BufferedReader rd = new BufferedReader(new InputStreamReader(soc.getInputStream()));
                    
                    String str = rd.readLine();
                    
                    if(str.equals("OK"))
                    {
                        pr.println(user_login);
                      
                    }
                    ObjectInputStream ob = new ObjectInputStream(soc.getInputStream());
                    rs_solditems =  (CachedRowSetImpl)ob.readObject();
                      DefaultListModel kuchbhi;
                     kuchbhi = new DefaultListModel();
                    
                    rs_solditems.beforeFirst();

                    while(rs_solditems.next())
                    {
                        String item_name = rs_solditems.getString("item_name");
                        System.out.println(item_name);
                        kuchbhi.addElement(item_name);
                        
                    }list_solditem.setModel(kuchbhi);
                    System.out.println("sold item done");
                } catch (IOException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        };t.start();
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
