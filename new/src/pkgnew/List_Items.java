/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgnew;

import com.sun.rowset.CachedRowSetImpl;
import java.awt.CardLayout;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.Blob;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import net.proteanit.sql.DbUtils;
import static pkgnew.Main_Frame.DisplayPanel;
import static pkgnew.Profile.person_image;
import static pkgnew.Profile.profile_pic;
import static pkgnew.Main_Frame.category;
import static pkgnew.Main_Frame.sub_category;
import static pkgnew.Main_Frame.user_login;
import static pkgnew.Main_Frame.card;
import static pkgnew.Main_Frame.ip;
/**
 *
 * @author priyanja
 */
public class List_Items extends javax.swing.JPanel {

    /**
     * Creates new form List_Items
     */
    
    public static CachedRowSetImpl rs_list_items = null;
    public static CachedRowSetImpl rs_individualitem = null;
    public static CachedRowSetImpl rs_bidders = null;
    public List_Items() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        label_list_item = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_listitems = new javax.swing.JTable();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        label_list_item.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(217, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_list_item, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(53, 53, 53)
                .addComponent(label_list_item, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 128));
        jLabel1.setText("Items For Sale");

        table_listitems.setBackground(new java.awt.Color(195, 195, 210));
        table_listitems.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        table_listitems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_listitems.setGridColor(new java.awt.Color(39, 18, 227));
        table_listitems.setIntercellSpacing(new java.awt.Dimension(1, 2));
        table_listitems.setSelectionBackground(new java.awt.Color(184, 70, 240));
        table_listitems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_listitemsMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                table_listitemsMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                table_listitemsMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(table_listitems);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void table_listitemsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_listitemsMouseEntered
        
        final Point p = evt.getPoint(); 
        Thread  t = new Thread(){
        
            public void run(){
               
                try {
                    int row = table_listitems.rowAtPoint(p);
                    int col = table_listitems.columnAtPoint(p);
                    System.out.println("in mouse entered");
                    // TODO add your handling code here:
                    // int row  = table_listitems.getSelectedRow();
                    String item_id = (table_listitems.getModel().getValueAt(row,0).toString());
                    System.out.println(item_id);
                    
                    rs_list_items.beforeFirst();
                    while(rs_list_items.next()){
                        System.out.println("in while");
                        String item = rs_list_items.getString("item_id").toString();
                       // System.out.println(item +"  "+ item_name);
                        if(item.equals(item_id)){
                            System.out.println("in if");
                        byte[] img = rs_list_items.getBytes("image");
                       
                        ImageIcon format = new ImageIcon(img);
                        
                        label_list_item.setIcon(format);
                            System.out.println("if over");
                        }
                        
                    }   } catch (SQLException ex) {
                    Logger.getLogger(List_Items.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            }
        
        };
        t.start();
        
    }//GEN-LAST:event_table_listitemsMouseEntered

    private void table_listitemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_listitemsMouseClicked
        // TODO add your handling code here:
        
        Thread t = new Thread(){
            
            public void run(){
                
                try {
                    Main_Frame.SEARCH=false;
                    System.out.println("clicked on table");
                    int row  = table_listitems.getSelectedRow();
                    String sitem_id = (table_listitems.getModel().getValueAt(row,0).toString());
                    int item_id =Integer.parseInt(sitem_id);
                    System.out.println(item_id);
                   
                    Socket soc = new Socket(ip,12345);
                    PrintWriter pr = new PrintWriter(soc.getOutputStream(),true) ;
                    pr.println("INDIVIDUALITEM");
                    //pr.flush();
                    
                    BufferedReader buff = new BufferedReader(new InputStreamReader(soc.getInputStream()));
                    String str= buff.readLine();
                    System.out.println(str);
                    
                    System.out.println("writing itemid on socket");
                    
                    PrintWriter pr1 = new PrintWriter(soc.getOutputStream(),true) ;
                    pr1.println(sitem_id);
                    pr1.println(user_login);
                    
                    System.out.println("written on socket");
                    
                    System.out.println("getting first rs from server");
                    ObjectInputStream ob = new ObjectInputStream(soc.getInputStream());
                    
                    rs_individualitem =  (CachedRowSetImpl)ob.readObject(); 
                    System.out.println("got the first rs");
                    ObjectInputStream obj = new ObjectInputStream(soc.getInputStream());
                    rs_bidders =  (CachedRowSetImpl)obj.readObject();
                    System.out.println("got the second rs");
                    
                    if(rs_individualitem.next()){
                    
                        Items.label_itemname.setText(rs_individualitem.getString("item_name"));
                        Items.items_Info.setText(rs_individualitem.getString("item_name"));
                        Items.items_BasePrice.setText(rs_individualitem.getString("base_price"));
                        Items.items_TimeLimit.setText(rs_individualitem.getString("time_limit"));
                        Items.items_UploadDate.setText(rs_individualitem.getString("date"));
                        Items.items_UploadedBy.setText(rs_individualitem.getString("User_name"));
                        Items.items_meetingplace.setText(rs_individualitem.getString("meeting_place"));
                        
                    String meeting_place = rs_individualitem.getString("meeting_place");
                        System.out.println(meeting_place);
                        byte[] pic = rs_individualitem.getBytes("image");
                        ImageIcon img = new ImageIcon(pic);
                        Items.pic.setIcon(img);
                        
                        category = rs_individualitem.getString("category");
                        sub_category = rs_individualitem.getString("sub_category");
                    }
                    
                    pr1.println(category);
                    pr1.println(sub_category);
                    
                    Items.table_bids.setModel(DbUtils.resultSetToTableModel(rs_bidders));
                    
                    CardLayout Card = (CardLayout)DisplayPanel.getLayout();
                    card = "items";
                    Card.show(DisplayPanel, "items");
                    
                } catch (IOException ex) {
                    Logger.getLogger(List_Items.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(List_Items.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(List_Items.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            }
        
        };
        t.start();
        
    }//GEN-LAST:event_table_listitemsMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println("in back");
     if(category.equals("Home Appliances"))
     {
         System.out.println("in home");
         CardLayout Card = (CardLayout)DisplayPanel.getLayout();
         card = "sub_home";
        Card.show(DisplayPanel, "sub_home");
     }
     else if(category.equals("Books"))
     {
         System.out.println("in books");
        CardLayout Card = (CardLayout)DisplayPanel.getLayout();
        card = "sub_books";
        Card.show(DisplayPanel, "sub_books");
     }
     else if(category.equals("Electronics Appliances"))
     {
          CardLayout Card = (CardLayout)DisplayPanel.getLayout();
          card = "sub_electronics";
        Card.show(DisplayPanel, "sub_electronics");
     }
     else if(category.equals("Sports"))
         {
          CardLayout Card = (CardLayout)DisplayPanel.getLayout();
          card = "sub_sports";
        Card.show(DisplayPanel, "sub_sports");
     }
     else 
     {
         
          CardLayout Card = (CardLayout)DisplayPanel.getLayout();
          card = "category";
        Card.show(DisplayPanel,"category");
     
     }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void table_listitemsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_listitemsMouseExited
        // TODO add your handling code here:
        label_list_item.setIcon(null);
    }//GEN-LAST:event_table_listitemsMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel label_list_item;
    public static javax.swing.JTable table_listitems;
    // End of variables declaration//GEN-END:variables
}
